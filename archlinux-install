#!/usr/bin/env bash
set -Eeuo pipefail
[ "$UID" -eq 0 ] || { echo "This script must be run as root."; exit 1;}

function install
{
    if test "$FORMAT_EFI" = "o" || test "$FORMAT_EFI" = "O"; then
        mkfs.vfat "${PARTITIONS[${EFI_NUMBER}]}"
    fi
    mkfs.ext4 "${PARTITIONS[${ROOT_NUMBER}]}"
    
    mount "${PARTITIONS[${ROOT_NUMBER}]}" /mnt
    mkdir -p /mnt/boot/efi
    mount "${PARTITIONS[${EFI_NUMBER}]}" /mnt/boot/efi
    
    # Création du swapfile de taille égale à la RAM
    echo "Création du swapfile..."
    fallocate -l $SWAPFILE_SIZE /mnt/swapfile
    chmod 600 /mnt/swapfile
    mkswap /mnt/swapfile
    swapon /mnt/swapfile
    
    # Mise à jour des mirroirs
    echo "Mise à jour des mirroirs..."
    reflector @/etc/xdg/reflector/reflector.conf
    
    # Installation de la base
    echo "Installation de la base..."
    pacstrap /mnt base base-devel linux linux-firmware man-db man-pages texinfo nano vim git curl zsh zsh-completions grml-zsh-config grub os-prober efibootmgr networkmanager xdg-user-dirs
    
    # Installation des microcodes
    if test "$INTEL_UCODE" = "o" || test "$INTEL_UCODE" = "O"; then
        echo "Installation des microcodes Intel..."
        pacstrap /mnt intel-ucode
    fi
    if test "$AMD_UCODE" = "o" || test "$AMD_UCODE" = "O"; then
        echo "Installation des microcodes AMD..."
        pacstrap /mnt amd-ucode
    fi
    
    # Configuration du système
    echo "Configuration du système..."
    genfstab -U /mnt >> /mnt/etc/fstab
    sed -i "s|#en_US.UTF-8 UTF-8|en_US.UTF-8 UTF-8|g" /mnt/etc/locale.gen
    sed -i "s|#en_US ISO-8859-1|en_US ISO-8859-1|g" /mnt/etc/locale.gen
    sed -i "s|#fr_FR.UTF-8 UTF-8|fr_FR.UTF-8 UTF-8|g" /mnt/etc/locale.gen
    sed -i "s|#fr_FR ISO-8859-1|fr_FR ISO-8859-1|g" /mnt/etc/locale.gen
    echo "LANG=fr_FR.UTF-8" > /mnt/etc/locale.conf
    echo "KEYMAP=fr-latin9" > /mnt/etc/vconsole.conf
    echo "FONT=eurlatgr" >> /mnt/etc/vconsole.conf
    echo "$HOSTNAME" > /mnt/etc/hostname
    echo "127.0.0.1 localhost" >> /mnt/etc/hosts
    echo "::1 localhost" >> /mnt/etc/hosts
    echo "127.0.1.1 $HOSTNAME.localdomain $HOSTNAME" >> /mnt/etc/hosts
    
    arch-chroot /mnt ln -sf $TIMEZONE /etc/localtime
    arch-chroot /mnt locale-gen
    arch-chroot /mnt systemctl enable NetworkManager
    arch-chroot /mnt mkinitcpio -P
    arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id="Arch Linux"
    arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg
    arch-chroot /mnt chsh --shell /bin/zsh
    echo "Configuration du mot de passe root..."
    arch-chroot /mnt passwd
    if [ ! -z $USER_NAME ]; then
        sed -i "s|# %wheel ALL=(ALL) ALL|%wheel ALL=(ALL) ALL|g" /mnt/etc/sudoers
        arch-chroot /mnt useradd --shell=/bin/zsh --groups=wheel --create-home $USER_NAME
        echo "Configuration du mot de passe pour l'utilisateur $USER_NAME..."
        arch-chroot /mnt passwd $USER_NAME
    fi
    
    # Démontage des partitions
    echo "Démontage des partitions..."
    umount -l /mnt
    
    echo "Installation terminée ! Vous pouvez redémarrer votre système."
}

loadkeys fr-latin9
USER_ANSWER="N"
while test "$USER_ANSWER" != "o" && test "$USER_ANSWER" != "O"; do
    fdisk -l
    read -e -p "Sur quel disque installer Archlinux ? : " TARGET_DISK
    read -e -p "Quel sera votre hostname : " HOSTNAME
    read -e -p "Installer les microcodes Intel ? (o/N) : " INTEL_UCODE
    read -e -p "Installer les microcodes AMD ? (o/N) : " AMD_UCODE
    read -e -p "Votre timezone (/usr/share/zoneinfo/Europe/Paris) : " TIMEZONE
    read -e -p "Souhaitez vous ajouter un utilisateur ? (nom d'utilisateur, laissez vide si aucun) : " USER_NAME
    if [ -z $INTEL_UCODE ]; then
        INTEL_UCODE="N"
    fi
    if [ -z $AMD_UCODE ]; then
        AMD_UCODE="N"
    fi
    if [ -z $TIMEZONE ]; then
        TIMEZONE="/usr/share/zoneinfo/Europe/Paris"
    fi
    echo ""
    echo "Votre disque dur cible : $TARGET_DISK"
    echo "Votre hostname : $HOSTNAME"
    echo "Installer les microcodes Intel : $INTEL_UCODE"
    echo "Installer les microcodes AMD : $AMD_UCODE"
    echo "Votre timezone : $TIMEZONE"
    if [ ! -z $USER_NAME ]; then
        echo "Nom de l'utilisateur supplémentaire : $USER_NAME"
    fi
    read -e -p "Les informations sont-elles correctes ? (o/N) : " USER_ANSWER
done

# Partitionnement
echo "Partitionnement du disque cible..."
cfdisk $TARGET_DISK
PARTITIONS=( $(fdisk -l | grep ^${TARGET_DISK}* | awk '{print $1}') )
USER_ANSWER="N"
while test "$USER_ANSWER" != "o" && test "$USER_ANSWER" != "O"; do
    echo "Partitions créées :"
    INDEX=0
    for partition in "${PARTITIONS[@]}"; do
        let INDEX=${INDEX}+1
        echo "Partition n°${INDEX} : $(fdisk -l | grep $partition)"
    done
    read -e -p "Numéro de la partition EFI ? : " EFI_NUMBER
    read -e -p "Formater la partition EFI ? (o/N) : " FORMAT_EFI
    if [ -z $FORMAT_EFI ]; then
        FORMAT_EFI="N"
    fi
    read -e -p "Numéro de la partition ROOT ? : " ROOT_NUMBER
    read -e -p "Taille du swapfile ? (Exemple: 8G) : " SWAPFILE_SIZE
    EFI_NUMBER=${EFI_NUMBER}-1
    ROOT_NUMBER=${ROOT_NUMBER}-1
    echo ""
    echo "Partition EFI : ${PARTITIONS[${EFI_NUMBER}]}"
    echo "Formater la partition EFI : $FORMAT_EFI"
    echo "Partition ROOT : ${PARTITIONS[${ROOT_NUMBER}]}"
    echo "Taille du swapfile : $SWAPFILE_SIZE"
    read -e -p "Les informations sont-elles correctes ? (o/N) : " USER_ANSWER
done

install
